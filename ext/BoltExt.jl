module BoltExt

if isdefined(Base, :get_extension)
    using Bolt
else
    using ..Bolt
end

function lin_Pk0(mode::Val{:Bolt}, cpar::CosmoPar, settings::Settings)
    洧도 = Bolt.CosmoParams(h = cpar.h,
        풜_r = cpar.풜g,
        풜_b = cpar.풜b,
        풜_c = cpar.풜c,
        A = cpar.As,
        n = cpar.ns,
        Y_p = cpar.Y_p,
        N_풯 = cpar.N_풯,
        풖m_풯 = cpar.풖m_풯)
    bg = Background(洧도)
    洧돆 = Bolt.RECFAST(bg; Yp=洧도.Y_p, OmegaB=洧도.풜_b,OmegaG=洧도.풜_r)
    ih = IonizationHistory(洧돆, 洧도, bg)
    ks_Bolt = LinRange(-4, 2, settings.nk)
    ks_Bolt = 10 .^(k_grid) 
    pk0_Bolt = [plin(k,洧도,bg,ih) for k in ks_Bolt]
    pki_Bolt = linear_interpolation(ks_Bolt, log.(pk0_Bolt);
                                    extrapolation_bc=Line())
    pk0 = exp.(pki_Bolt(settings.ks))
    return pk0
end

end # module